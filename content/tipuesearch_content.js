var tipuesearch = {"pages": [{'title': 'about', 'text': '\xa0 \xa0\xa0 \n 個人倉儲 :\xa0 https://github.com/40823209/cd2021 \n -------------------------------------------------------test \n 二人小組 : stage1-bg18 \n 主題:水球發射器 \n 40823209 顏沐恩 ( 網站 / 倉儲 ) \n 40823210 李柏諺 ( 網站 / 倉儲 ) \n 小組( 網站 / 倉儲 ) \n ------------------------------------ \n 四人小組 : stage2-bg11 \n 主題:免彎腰販賣機 \n 40823209 顏沐恩 ( 網站 / 倉儲 ) \n 40823210 李柏諺 ( 網站 / 倉儲 ) \n 40823201 陳品喬 ( 網站 / 倉儲 ) \n 40823217 莊子靖 ( 網站 / 倉儲 ) \n 小組( 網站 / 倉儲 ) \n ------------------------------------ \n 八人小組 : stage3-bg2 \n 主題:免彎腰販賣機(升級版) \n 40823217 / 40823217 \n 40823201 / 40823201 \n 40823209 / 40823209 \n 40823210 / 40823210 \xa0 \n 40823206 / 40823206 \n 40823207 / 40823207 \n 40823223 / 40823223 \n 40823224 / 40823224 \n', 'tags': '', 'url': 'about.html'}, {'title': 'stage1-bg18', 'text': '', 'tags': '', 'url': 'stage1-bg18.html'}, {'title': 'W1', 'text': '', 'tags': '', 'url': 'W1.html'}, {'title': '建立個人網站及Blog', 'text': '\n 建立個人的網站 40823209 cd2021 \n 並且將課堂上的筆記移駕至網站上 \n 筆記內容包刮 「如何開啟9443」、 「如何開啟8444」、「如何上傳」 \n 日後如果課堂上老師有教更多，會再一一更新個人筆記。 \n \n 除了建立個人網站之外 \n 還有更新LEO. \n 以及建立個人Blog \n \n', 'tags': '', 'url': '建立個人網站及Blog.html'}, {'title': '創建Github', 'text': '\n 在創建網站之前，更重要的是要先創建Github倉儲 cd2021， \n 這樣在每次上傳時，都能檢查有無確實上傳。做第二次的Check。 \n \n 我們能透過右半部來確認，有打勾，表示檔案已確實上傳 \n 也能查看何時上傳。 \n', 'tags': '', 'url': '創建Github.html'}, {'title': 'W2~W3', 'text': '', 'tags': '', 'url': 'W2~W3.html'}, {'title': '產品設計介紹', 'text': '\n 我們這組stage1-bg18 所要做的主題是「水球發射器」 \n 動機:因為夏天將至，在這炎熱的天氣裡，總是要透過游泳、玩水來消暑。 \n 所以我們這組便突發奇想打算設計一把能填裝水球的大砲，並將其發射出去 \n ，以達到娛樂及消暑的部分。 \n', 'tags': '', 'url': '產品設計介紹.html'}, {'title': '產品視圖', 'text': '前視圖 \n 上視圖 \n 全剖面圖 \n', 'tags': '', 'url': '產品視圖.html'}, {'title': '產品各部位零件', 'text': '1.按鈕彈簧 \n 2.桶身 \n 3.模擬水球 \n 4.檔片 \n 5.拉桿 \n 6.拉桿彈簧 \n 7.按鈕 \n 8.按鈕基座 \n', 'tags': '', 'url': '產品各部位零件.html'}, {'title': '零件爆炸圖(GIF)', 'text': '\n \n', 'tags': '', 'url': '零件爆炸圖(GIF).html'}, {'title': '產品作動原理(GIF)', 'text': '可以從動圖中了解到水球發射器的剖面圖及運作原理。 \n \n \n', 'tags': '', 'url': '產品作動原理(GIF).html'}, {'title': 'W4', 'text': '', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '甲班各部影片 時長 \n \n', 'tags': '', 'url': 'W5.html'}, {'title': '小組討論進度', 'text': '\n \n \n \n', 'tags': '', 'url': '小組討論進度.html'}, {'title': '產品報告', 'text': '\n', 'tags': '', 'url': '產品報告.html'}, {'title': 'W4口頭報告(有聲)', 'text': '\n', 'tags': '', 'url': 'W4口頭報告(有聲).html'}, {'title': 'stage2-bg11', 'text': '', 'tags': '', 'url': 'stage2-bg11.html'}, {'title': 'W6', 'text': '', 'tags': '', 'url': 'W6.html'}, {'title': '小組討論的過程及內容', 'text': '透過Gitter這項平台，讓我們4人能在線上一起分工討論，並且一起探討設計新的產品。 \n \n', 'tags': '', 'url': '小組討論的過程及內容.html'}, {'title': 'W7', 'text': '', 'tags': '', 'url': 'W7.html'}, {'title': '設計動機', 'text': '主題: 免彎腰販賣機 \n 動機:思考 到一些老人、行動不便者、受傷的人可能無法彎腰去拿取物品， \n 所以我們將商品出口設置在右側中間。當我們買完商品時，商品即會掉落 於斜面， \n 且滾動至右側平台，而當平台偵測到重量，平台就會上升至出口處， \n 購買者即可不必彎腰就可以拿去商品。 \n \n 畫圖想法: \n 主設計師40823210 \n 概念:將商品放入彈簧中，然後使彈簧旋轉讓商品掉落，掉到下 \n 方滾輪處，利用滾輪旋轉使商品掉進旁邊的平台，讓齒輪跟螺 \n 桿的作動，讓平台上升到一定高度，給消費者拿取。 \n 第一版- download \n', 'tags': '', 'url': '設計動機.html'}, {'title': '各部位零件名稱', 'text': '本體 \n \n 玻璃窗(先用一塊板子代替) \n \n 蓋 \n \n 上軌道 \n \n 下軌道 \n \n 鎖點支架 \n \n 上滑軌輪 \n \n 置物架X3 \n \n 螺旋鉤子X3 \n \n 滾筒X10 \n \n 位移平台 \n \n 短蜗桿 \n \n 長蜗桿 \n \n 蜗桿支架 \n \n 蜗桿滑塊 \n \n \n \n 取物窗 \n \n', 'tags': '', 'url': '各部位零件名稱.html'}, {'title': '組合圖及細部構造', 'text': '組合圖 \n \n 長蜗桿細節圖 \n \n 滾筒細節圖 \n \n', 'tags': '', 'url': '組合圖及細部構造.html'}, {'title': 'W8', 'text': '', 'tags': '', 'url': 'W8.html'}, {'title': 'GIF動態模擬', 'text': '4/9~4/11模擬測試 \n 第一版 \n 第一次模擬 \n 一開始因為未與齒輪做連結而導致無法協調 \n \n 第二次模擬 \n 雖然與齒輪做連結了，因為齒輪無法帶動板子上升 \n 而導致破圖，使板子上升到齒輪上面 \n \n 第三次模擬 \n 重新調整板子與齒輪的連結關係後，雖然可以透過旋轉尺 \n 齒輪來使 板子上升，但與螺桿的配合還是怪怪的，然後無 \n 法上升 到指定高度。之後我們將下方滾輪也讓它旋轉，使 \n 商品 能滾進平台。還有上方的彈簧，讓它能旋轉使商品能掉 \n 落 至滾輪處。 \n \n \n \n 第四次模擬 \n 修正第三次的問題後，現在可以上升至正常高度，且齒輪與蜗 \n 桿的配合也不會這麼奇怪。再來我們將商品放入了彈簧中，並 \n 讓它 旋轉後掉到滾進平台，上升到可拿取的地方。 \n \n [補充說明]:商品 再經由旋轉掉落的時候，因為會撞到外蓋的關係，所以會 直接掉 \n 到滾輪區，然後滑落，但是因為在模擬的時候蓋住外殼我 們 會看不見裡面，所 \n 以我們會將外蓋打開，以便觀看，但這也導致了，商 品失去了一個反彈的力讓 \n 它掉到滾輪區，所以變得每次都會掉出來外面， 所以我們只能將置物架設定為 \n 無碰撞，讓商品直接掉落到滾輪區，已完成這次的模擬。(詳圖如下) \n \n \n \n \n', 'tags': '', 'url': 'GIF動態模擬.html'}, {'title': 'W9', 'text': '', 'tags': '', 'url': 'W9.html'}, {'title': '每周工作進度狀態', 'text': '\n', 'tags': '', 'url': '每周工作進度狀態.html'}, {'title': 'stage3-bg2', 'text': '', 'tags': '', 'url': 'stage3-bg2.html'}, {'title': 'W9網頁操作', 'text': '1.學會如何使用ipv4。 \n 2.利用老師給的分組名單，用程式推導出每個小組的網頁跟倉儲 \n 還有每個組員的倉儲。 \n 3.利用ipv4的[remote API]來進行遠端的操控 coppeliasim \n', 'tags': '', 'url': 'W9網頁操作.html'}, {'title': 'ipv4操作', 'text': '以下是ipv4的操作步驟 \n 打開網路介面卡 \n \n 選擇當前使用的網路(插網路線選擇乙太網路，連接WIFI則是選擇WIFI) \n \n 選擇IPv4->內容 \n \n 輸入IP位址 \n \n 開啟黑窗並且輸入 ipconfig /all \n \n 找出網路的IP之後，在確認有沒有連到。 \n \n 輸入紅框內部文字指令 \n \n 檢查是否連線成功 \n \n 進到 mde.tw 下載4.2.0版的 coppeliasim 和 vrep.remoteApi \n \n \n', 'tags': '', 'url': 'ipv4操作.html'}, {'title': 'task1測試', 'text': '\n 我個人覺得我學習程式這方面的速度比較慢，所以我有去詢問我們組長40823217，那他本人也有去請教40823245的小組[take1測試]，後續我也盡力去向我們組長學習並使用。 \n [我所遇到的問題]:理解上比較慢，要多花點時間去摸索。 \n ---------------------------------------------- \n 以下為各分組倉儲, 分組網站與學員倉儲及學員網站連結: \n stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site \n 教學 \n 1.先找到stage3-b的分組名單，在老師的 task1 裡面有 \n 2.將程式碼複製到白窗，tool執行就可 \n 程式碼(參考40823245): \n def stu2b(account):\n    if account == "40823231":\n        return account + "-2"\n    elif account[0:3] == "407":\n        return "s" + account\n    else:\n        return account\n \nteamb = []\n \n# open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open("stage3_2b.txt") as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n#print(len(data))\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    teamb.append(group)\n     \noutput = ""    \nseperator = "-"*10 + "<br />"\n \nfor i in teamb[0:]:\n    team = i[0]\n    leader = stu2b(i[1])\n    m1 = stu2b(i[3])\n    m2 = stu2b(i[5])\n    m3 = stu2b(i[7])\n    m4 = stu2b(i[9])\n    m5 = stu2b(i[11])\n    m6 = stu2b(i[13])\n     \n    try:\n        m7 = stu2b(i[15])\n    except:\n        m7 = ""\n    try:\n        m8 = stu2b(i[17])\n    except:\n        m8 = ""\n         \n    leaderrepo = "<a href=\'http://github.com/" + leader + "/cd2021\'>" + leader + " repo</a>"\n    leadersite = "<a href=\'http://" + leader + ".github.io/cd2021\'>" + leader +  " site</a>"\n    m1repo = "<a href=\'http://github.com/" + m1 + "/cd2021\'>" + m1 + " repo</a>"\n    m1site = "<a href=\'http://" + m1 + ".github.io/cd2021\'>" + m1 +  " site</a>"\n    m2repo = "<a href=\'http://github.com/" + m2 + "/cd2021\'>" + m2 + " repo</a>"\n    m2site = "<a href=\'http://" + m2 + ".github.io/cd2021\'>" + m2 +  " site</a>"\n    m3repo = "<a href=\'http://github.com/" + m3 + "/cd2021\'>" + m3 + " repo</a>"\n    m3site = "<a href=\'http://" + m3 + ".github.io/cd2021\'>" + m3 +  " site</a>"\n    m4repo = "<a href=\'http://github.com/" + m4 + "/cd2021\'>" + m4 + " repo</a>"\n    m4site = "<a href=\'http://" + m4 + ".github.io/cd2021\'>" + m4 +  " site</a>"\n    m5repo = "<a href=\'http://github.com/" + m5 + "/cd2021\'>" + m5 + " repo</a>"\n    m5site = "<a href=\'http://" + m5 + ".github.io/cd2021\'>" + m5 +  " site</a>"\n    m6repo = "<a href=\'http://github.com/" + m6 + "/cd2021\'>" + m6 + " repo</a>"\n    m6site = "<a href=\'http://" + m6 + ".github.io/cd2021\'>" + m6 +  " site</a>"\n  \n \n    teamrepo = "<a href=\'http://github.com/" + leader + "/" + team + "\'>" + team + " repo</a>"\n    teamsite =  "<a href=\'http://" + m1 + ".github.io/" + team + "\'>" + team +  " site</a>"\n \n    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site \n     \n    if m7 != "":\n       m7repo = "<a href=\'http://github.com/" + m7 + "/cd2021\'>" + m7 + " repo</a>"\n       m7site = "<a href=\'http://" + m7 + ".github.io/cd2021\'>" + m7 +  " site</a>"   \n       output += " |  " + m7repo + "| " + m7site\n    else:\n        output += "" \n     \n    if m8 != "":\n       m8repo = "<a href=\'http://github.com/" + m8 + "/cd2021\'>" + m8 + " repo</a>"\n       m8site = "<a href=\'http://" + m8 + ".github.io/cd2021\'>" + m8 +  " site</a>"   \n       output += " |  " + m8repo + "| " + m8site + "<br />" + seperator\n    else:\n        output += "<br />" + seperator\n \n \nprint(output)\n# the following will use group data to generate needed html \n', 'tags': '', 'url': 'task1測試.html'}, {'title': 'task2', 'text': '\n 下載好 4.2.0版的 coppeliasim 和 vrep.remoteApi 後 \n 在資料夾中找到coppeliasim.exe並且打開coppeliasim \n \n \n 在檔案中找到下載好的vrep_remoteapi_ex \n 並在資料夾中找到2w1a.py，在SciTE(小白板)中打開 \n 更改IP位址(192.168.192.122)和使用者ID(ClientID)，名稱可以自取 \n 將import vrep改成import sim as vrep \n \n \n \n \n \n \n \n 在File中打開檔案2w1a.ttt \n \n \n \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'task3', 'text': '這部分是參考同組組員40823201所模擬的。 \n \n 先下載 RoboDK 5.2.2 可攜程式 及 Pick and Place 檔案 \n \n 下載完解壓縮至隨身碟 \n \n 執行RoboDK.exe \n \n \n 文件->打開->點選pick_and_place_with_python.rdk \n \n 然後打開SciTE並將pick_and_place.py拖拉至 SciTE \n \n 打開顯示數字行列，並找到第78行 \n (robodk_path指 RoboDK.exe的路徑 ) \n (robodk_ip指API的IP位置) \n \n *找IP \n 回到 RoboDK點選工具列最底層的選項 \n \n 其他->勾選"允許外部API"->點選"API服務器IP" \n \n 選取IP輸入下方欄位並複製->OK->回到 SciTE貼上 \n \n *找 RoboDK路徑 \n 找到RoboDK.exe位置 \n \n 複製上方路徑並回到 SciTE貼上 \n \n 回到RoboDK->工具->選項->Python \n \n 回到 SciTE->Tools->Go \n 將右方欄位的藍色路徑複製，並在RoboDK中貼上(綠色線框選處)->確定 \n \n 左側上方的Pick and Place點擊左鍵->編輯Python程序 即可作動 \n \n \n', 'tags': '', 'url': 'task3.html'}, {'title': 'W10討論主題', 'text': '在這第10周，我們全體八人透過gitter一起線上討論我們要設計的新主題或者沿用舊的題材加以更改。 \n 以下是我們討論的紀錄片。 \n \n \n 經小組成員討論後，決定主題延續Stage2-bg11的免彎腰販賣機。 \n 分配任務 \n 程序編寫:40823224 \n 模擬:4082310/40823217 \n 繪圖:40823206/40823223/40823207 \n 網頁製作:40823209/40823201 \n ECE的Vending machine 設計與模擬 \n \n \n', 'tags': '', 'url': 'W10討論主題.html'}, {'title': 'W11直播處理', 'text': '以下是我們小組成員所整理的「OBS」的下載方式以及如何使用這項軟體。 \n 個人覺得這項軟體OBS的使用便利性比ShareX來的高，因為可以錄製聲音。 \n \n OBS下載 \n 找到下載好的OBSPortable資料夾 \n \n App>obs-studio>bin>64bit 找到  obs64.exe  並且打開他 \n \n 一開始會發現是黑屏 \n 在右下角找到來源>+>顯示器擷取 \n \n 按下 (確定) \n \n 進到設定>串流 \n \n 將服務及伺服器改為YouTube \n \n 到YouTube直播頁面(需24小時前開起權限) \n 在下方找到串流金鑰並複製 \n \n 回到OBS設定 \n 將剛複製的串流金鑰貼上 \n \n 到YouTube確認是否串流成功即可開始直播 \n \n \n', 'tags': '', 'url': 'W11直播處理.html'}, {'title': 'W12 使用remoteapi', 'text': '以下是我們小組所要模擬測試(透過CoppeliaSim以及remote API \xa0 ) \n \n CoppeliaSim 場景 remote API 協同監控流程: \n 各組分別將個人在 stage1 與 stage2 所完成的 coppeliasim 場景, \n  採 Python remote API 進行遠端操控。 \n (相關檔案都放在了倉儲: stage3-bg2 -販賣機api) \n 5/14 第一次測試 \n 模擬人員:40823247 \n \n \n 因為只有先打好按鈕設定及程式大概的主體，所以會有轉很快的情形發生，是因為我還沒調轉速。 \n \n \n', 'tags': '', 'url': 'W12 使用remoteapi.html'}, {'title': 'W13小組遠距討論', 'text': '因為疫情的關係，所以後續課程以及小組討論都改為線上交通。 \n 以下是我們小組線上討論的紀錄片 \n \n \n', 'tags': '', 'url': 'W13小組遠距討論.html'}, {'title': 'W14~W15機械手臂模擬', 'text': '主題: RoboDK模擬與操作 \n 內容:透過RoboDK這套模擬程式，練習運用內建程式，將球夾取擺放至下一個地方。 \n 以下是我操作的影片 \n \n 下載檔案如下: \n RoboDK 5.2.2 可攜程式 \n Pick and Place 檔案 \n', 'tags': '', 'url': 'W14~W15機械手臂模擬.html'}, {'title': 'W15', 'text': 'W15取分項目 \n 將老師指定的影片加上中文字幕(英翻中) \n \n \n ------------------------------------------------------------------------------------------------------ \n 參考連結 \n 如何快速上字幕 \n \n', 'tags': '', 'url': 'W15.html'}, {'title': '遇到的問題', 'text': '設計的過程中有遇到孔洞錯位的問題，就是上下的孔位並不是同心圓， \n 導致後續的模擬非常卡， 這也讓我們查找了很久才發現。 \n \n', 'tags': '', 'url': '遇到的問題.html'}, {'title': '課後筆記', 'text': '', 'tags': '', 'url': '課後筆記.html'}, {'title': '如何開啟9443', 'text': '\n 開啟小黑窗後依序輸入 \n cd tmp \n cd cd2021 \n cd cmsimde \n python wsgi.py \n 接著到網頁上芳欄位輸入 \n https://localhost:9443 \n', 'tags': '', 'url': '如何開啟9443.html'}, {'title': '如何開啟8444', 'text': '\n 打開 data\xa0 → tmp\xa0 → cd2021 \n 將 http-server.py 拖至小白窗 \n \n 按 Tools\xa0 \xa0 → Go \n', 'tags': '', 'url': '如何開啟8444.html'}, {'title': '如何上傳', 'text': '\n 先進到cd tmp \xa0 → cd\xa0 cd2021 \n git add . \n git commit -m "此更新的主旨" \n git push \n 輸入帳號(學號) \n 輸入密碼 \n', 'tags': '', 'url': '如何上傳.html'}, {'title': 'SSH', 'text': '利用老師所教的「ssh」，後續在上傳到Github時，直接git push就好，最後就不用再輸入 學號 及 密碼。 \n \n', 'tags': '', 'url': 'SSH.html'}, {'title': 'W12 如何開啟leo及reveal', 'text': 'W12 \n 日期:05/20 \n 內容:由於我對於開啟leo與reveal的過程不是很熟悉，故有請教同學40823247 許力右指導。 \n \n', 'tags': '', 'url': 'W12 如何開啟leo及reveal.html'}, {'title': 'W13 SSH快速版(簡單化)', 'text': 'W13 \n 日期:05/27 \n 內容:此方法是40823247 許力右指導的，他有發現有更快設定SSH的方式，並教導我如何操作。 \n \n', 'tags': '', 'url': 'W13 SSH快速版(簡單化).html'}, {'title': 'W14 當git pull有狀況時該如何解決', 'text': 'W14 \n 日期:06/04 \n 遇到問題:已經git pull，但是無法拉下小組最新的網頁資料。 \n 有請教同學:40823247 許力右 \n 解決方式如下: \n \n 如果你想保留剛才本地修改的程式碼，並把git伺服器上的程式碼pull到本地（本地剛才修改的程式碼將會被暫時封存起來） \n *記得要在小組倉儲底下* \n git stash \n (按ENTER) git pull origin master \n (按ENTER) git stash pop \n (按ENTER) \n 最後再git pull \n 如此一來，伺服器上的程式碼更新到了本地，而且你本地修改的程式碼也沒有被覆蓋，之後使用add，commit，push 命令即可更新原生代碼到伺服器了。 \n \n 依照網路上解決方式: https://www.itread01.com/content/1545046022.html \n', 'tags': '', 'url': 'W14 當git pull有狀況時該如何解決.html'}, {'title': 'W15 註冊gogs和fossil', 'text': 'W15 \n 影片內容:如何註冊gogs和建立fossil倉儲，並且將github的推送更新至gogs，使其兩邊同步。 \n 日期:06/11 \n \n', 'tags': '', 'url': 'W15 註冊gogs和fossil.html'}, {'title': '個人Youtube頻道', 'text': 'W1的工作進度 \n 這部影片在說明第一週的建立個人網站的過程，包刮建立Github倉儲 建立blog 更新Leo 等等…… \n \n \n W2~W3的工作進度 \n 這部影片在說明第二週我們所要做的專題題目是「水球發射器」，內容有介紹我們發想動機，以及各零件的名稱。 \n \n \n 水球發射器的作動原理 \n 影片內容在說明水球發射器的剖面圖及運作原理。 \n \n \n W4之產品報告 \n 這部影片在說明我們的產品報告，內容在講述產品的內部構造、零件、動態模擬、心得分享……等  \n \n W4上台口頭報告 \n \n \n SSH的流程 \n \n \n W11 stage3-bg2小組討論 \n \n \n W12\xa0如何開啟leo及reveal \n \n \n W13  ssh快速版(簡單化) \n \n \n W14  當git pull有狀況時該如何解決 \n \n \n W15  小組直播stage3-bg2 \n \n \n W15  如何註冊gogs和創建fossil倉儲 \n \n', 'tags': '', 'url': '個人Youtube頻道.html'}, {'title': 'W16', 'text': '項目1 :\xa0 Onshape 零組件繪製 \xa0 \n \n onshape圖檔網址: \n https://cad.onshape.com/documents/f6fe65bd36ed575a987f4dc2/w/f4a754d42e1c19f590ba5efc/e/566768e77112610f3cd18829 \n onshape圖檔連結: onshape個人線上繪圖連結 \n 機械手臂下載點: 機械手臂STL檔 \n \n 項目2 : 建立 CoppeliaSim 4.1.0 MTB robot 場景 \n \n Google Drive: 所有檔案 \n 以下是我「所有檔案」的檔案內容，有需要的同學們可以點下載參考。 \n \n \n \n Leo檔: 鍵盤操作 \n 可用鍵盤控制的程式的基本操作: \n 方向鍵左-軸1左轉 \n 方向鍵右-軸1右轉 \n 方向鍵上-軸2左轉 \n 方向鍵下-軸2右轉 \n S-吸盤向下 \n W-吸盤向上並吸取 \n 空白鍵-放下 \n function sysCall_init()\n    joint1=sim.getObjectHandle(\'joint1\')\n    joint2=sim.getObjectHandle(\'joint2\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    joint3=sim.getObjectHandle(\'joint3\')\n    sim.setJointTargetPosition(joint1,0)\n    sim.setJointTargetPosition(joint2,0)\n    sim.setJointTargetPosition(joint3,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\n    deg3=0\nend\n\nfunction sysCall_actuation()\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==2009) then\n            deg1=deg1+1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint1,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2010) then\n            deg1=deg1-1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint1,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2007) then\n            deg2=deg2+1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint2,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==2008) then\n            deg2=deg2-1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint2,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==115) then\n                sim.setJointTargetPosition(jointz,-0.085)\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if (auxiliaryData[1]==119) then\n                sim.setJointTargetPosition(jointz,0)\n            end\n            if (auxiliaryData[1]==32) then\n                sim.setIntegerSignal("pad_switch",0)\n            end\n            sim.setJointTargetPosition(joint3,deg3*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend \n ------------------------------------------------------------------------------------------- \n 以下是 參考老師提供的程式，藉由鍵盤按鍵操作機械手臂的轉向。 \n if (auxiliaryData[1]==114) then --r right turn in degree\n                    -- if key r pressed axis1 angle adds 5 degrees\n                     rotation1 = rotation1 + 5*deg\n                     sim.setJointPosition(axis1, rotation1)\n                end -- if r\n                if (auxiliaryData[1]==108) then --l left turn in degree\n                    -- if key l pressed axis1 angle substract 5 degrees\n                     rotation1 = rotation1 - 5*deg\n                     sim.setJointPosition(axis1, rotation1)\n                end -- if l\n                if (auxiliaryData[1]==100) then --d suction pad down\n                    -- if key d pressed axis3 will down 0.01 m plus calibration\n                     distance3 = distance3 + 0.01 + calibration\n                     sim.setJointPosition(axis3, distance3)\n                end -- if d\n                if (auxiliaryData[1]==117) then --u suction pad up\n                    -- if key u pressed axis3 will up 0.01 m minus calibration\n                    -- 吸盤往下升 1 公分加上校正值\n                     distance3 = distance3 - 0.01 - calibration\n                     sim.setJointPosition(axis3, distance3)\n                end -- if u \n 項目3 : \xa0 手臂末端加入 components-gripper-suction pad 吸盤 \n 驅動程式參數: \n 根據每個人所做的機械手臂大小不同，吸盤軸下降高度也會有所不同 \n 像是我 jointz 的參數改為-0.055m \n function moving(x,y)\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    print(deg1)\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n \nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.085)\n    sim.wait(2)\n    sim.setJointTargetPosition(jointz,0)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n    moving(0.2,0.7)\n    sim.wait(2)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(2)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.085)\n    sim.wait(2)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(2)\n    moving(-0.3,-0.55)\n    sim.wait(2)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(2)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.085)\n    sim.wait(2)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(2)\n    end\nend \n ---------------------------------------------------------------------------------------------------- \n 以下是 參考同學40823214提供的程式 \n  maxPullForce=sim.getScriptSimulationParameter(sim.handle_self,\'maxPullForce\')\n    maxShearForce=sim.getScriptSimulationParameter(sim.handle_self,\'maxShearForce\')\n    maxPeelTorque=sim.getScriptSimulationParameter(sim.handle_self,\'maxPeelTorque\')\n \n    sim.setLinkDummy(l,-1)\n    sim.setObjectParent(l,b,true)\n    m=sim.getObjectMatrix(l2,-1)\n    sim.setObjectMatrix(l,-1,m)\nend\n \nfunction sysCall_cleanup() \n    --this is teach by 40823214\n    sim.setLinkDummy(l,-1)\n    sim.setObjectParent(l,b,true)\n    m=sim.getObjectMatrix(l2,-1)\n    sim.setObjectMatrix(l,-1,m)\nend\n \nfunction sysCall_sensing() \n    parent=sim.getObjectParent(l)\n    --this is teach by 40823214\n    local sig=sim.getIntegerSignal("pad_switch")\n    if (not sig) or (sig==0) then\n        if (parent~=b) then\n            sim.setLinkDummy(l,-1)\n            sim.setObjectParent(l,b,true)\n            m=sim.getObjectMatrix(l2,-1)\n            sim.setObjectMatrix(l,-1,m)\n        end\n    else\n        if (parent==b) then\n            index=0\n            while true do\n                shape=sim.getObjects(index,sim.object_shape_type)\n                if (shape==-1) then\n                    break\n                end\n                local res,val=sim.getObjectInt32Parameter(shape,sim.shapeintparam_respondable)\n                if (shape~=b) and (val~=0) and (sim.checkProximitySensor(s,shape)==1) then\n                    -- Ok, we found a respondable shape that was detected\n                    -- We connect to that shape:\n                    -- Make sure the two dummies are initially coincident:\n                    sim.setObjectParent(l,b,true)\n                    m=sim.getObjectMatrix(l2,-1)\n                    sim.setObjectMatrix(l,-1,m)\n                    -- Do the connection:\n                    sim.setObjectParent(l,shape,true)\n                    sim.setLinkDummy(l,l2)\n                    break\n                end\n                index=index+1\n            end\n        else\n            -- Here we have an object attached\n            if (infiniteStrength==false) then\n                -- We might have to conditionally beak it apart!\n                result,force,torque=sim.readForceSensor(suctionPadLink) -- Here we read the median value out of 5 values (check the force sensor prop. dialog)\n                if (result>0) then\n                    breakIt=false\n                    if (force[3]>maxPullForce) then breakIt=true end\n                    sf=math.sqrt(force[1]*force[1]+force[2]*force[2])\n                    if (sf>maxShearForce) then breakIt=true end\n                    if (torque[1]>maxPeelTorque) then breakIt=true end\n                    if (torque[2]>maxPeelTorque) then breakIt=true end\n                    if (breakIt) then\n                        -- We break the link:\n                        sim.setLinkDummy(l,-1)\n                        sim.setObjectParent(l,b,true)\n                        m=sim.getObjectMatrix(l2,-1)\n                        sim.setObjectMatrix(l,-1,m)\n                    end\n                end\n            end\n        end\n    end\nend \n 項目4 : 逆向運算學函式 \n function moving(x,y)\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    print(deg1)\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.055)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n    moving(0.2,0.7)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.055)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(3)\n    moving(-0.3,-0.55)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.055)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(3)\n    end\nend \n 項目5 : Python remote API 逆向運動學函式 \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\ndef moving(x,y):\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 :\n        deg_base1=deg1_base+math.pi\n    \n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,-deg2,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)\n\nprint (\'Start\')\n \nvrep.simxFinish(-1)\n \nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n\n    res = vrep.simxAddStatusbarMessage(\n        clientID, "This is teach by 40823214 ",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n\n\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n    \n    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.055,opmode)\n    time.sleep(2)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n    \n    while True:\n        moving(0.2,0.7)\n        time.sleep(2)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(2)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.055,opmode)\n        time.sleep(2)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n        moving(-0.3,-0.6)\n        time.sleep(2)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(2)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.055,opmode)\n        time.sleep(2)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n            \n             \n 心得: \n \n 以我這位初學者的角度出發，這條路真的難上加難，寫程式時常常遇到挫折，同時要學會Onshape、Coppeliasim確實不簡單，不過這一路上特別感謝40823214這位同學，他又讓我重新振作起來，他也常利用課後時間教導我們班上的同學，而且有問必有答，教學上還不吝嗇，他也會將它教學影片放上Youtube讓我們可以自行學習，在此特別感謝他，最後我也確實在這門課學習到很多知識，也期望後續能利用這門所學的技能，在未來社會中學以致用。 \n \n 40823214的30人協同的教學影片，當時我也有參與其中，以下共有3部影片 \n \n \n \n ----------------------------------------------------------------------------------------------------- \n 以下我再次統總所有載點，供有需要下載的人 \n 項目1- 機械手臂3D檔(STL檔) \n 項目2- 鍵盤操作(lua程式) \n 項目3- 吸盤程式(txt檔) \n 項目4- 軟體內運作(lua程式) \n 項目5- Python remote API 驅動(PY程式) \n 所有程式', 'tags': '', 'url': 'W16.html'}]};